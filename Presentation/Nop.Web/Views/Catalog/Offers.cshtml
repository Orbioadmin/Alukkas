@model CategoryModel
@{
  
    @*Layout = "~/Views/Shared/_Root.cshtml";
    Html.AppendCssFileParts("~/styles/TGI/listing.css");
  Html.AppendCssFileParts("~/styles/TGI/offerPage.css");
Html.AppendCssFileParts("~/styles/TGI/offerPage.css");

  
  
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);*@


            if (!(bool)Model.CustomProperties["noFormat"])
	 	    {
	 	        Layout = "~/Views/Shared/_Root.cshtml";
	 	        Html.AppendCssFileParts("~/styles/TGI/listing.css");
                Html.AppendCssFileParts("~/styles/TGI/quickPopup.css");
	 	        Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
	 	        Html.AddMetaDescriptionParts(Model.MetaDescription);
	 	        Html.AddMetaKeywordParts(Model.MetaKeywords);
	 	    } 

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Core.Domain.Orders;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
@{
 Layout = "~/Views/Shared/_Root.cshtml";
Html.AppendCssFileParts("~/styles/TGI/index.css");
 int currentCategoryId = 0;
    
}

<div class="container containerBlock marginBottom marginTopConfig offerPage">
    <div class="productTopContainer">

        <div class="span7 noMarginLeft">
            @*category breadcrumb*@
            @if (Model.DisplayCategoryBreadcrumb)
            {
                <ul class="breadcrumb">
                    <li>
                        <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                        <span class="divider">&gt;</span>
                    </li>
                    @foreach (var cat in Model.CategoryBreadcrumb)
                    {
                        var isLastCategory = cat.Id == Model.Id;

                        if (isLastCategory)
                        {
                            <li class="active">@cat.Name</li>
                        }
                        else
                        {
                            <li>
                                <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                                <span class="delimiter">&gt;</span>
                            </li>
                        }
                    }
                </ul>
            }


        </div>
        @Html.Widget("categorydetails_after_breadcrumb")
          

        <div class="span5 noMarginLeft extraOffer">
            <a href="#" class="pull-right">Get an Extra <span>20% discount</span> on all LG mobile phones</a><span class="extraOfferBrand pull-right"></span>
        </div>
    </div>
    <div class="mainBody pull-left">
        <div class="container">
            <div class="row noMarginLeft">
                @Html.Widget("categorydetails_before_filters")
                <div class="span2 pull-left noMarginLeft">
                    <div class="filters widthConfigSpan2">
                        <h3>Filter</h3>
                        <div class="filterChecks">
                             
                            @*filtering*@
                            @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
                            {
                                @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
                            }
                            @*filtering*@
                            @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
                            {
                                @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
                            }
                        </div>
                    </div>
                    <span class="banner pull-left">
                        <img src="~/images/banner/left-banner.gif">
                    </span>
                    <span class="banner pull-left">
                        <img src="~/images/banner/left-banner.gif">
                    </span>
                </div>
               @* <div class="bannerTop span10 noMarginLeft"><img src="~/images/banner/fashionMainBanner.png"></div>*@
                <div class="mainContentBottom pull-right span10 noMarginLeft">

                    <div class="carouselBlock span10 noMarginLeft pull-right">
                        <div class="span10 noMarginLeft ">
                            
                                   


                     @Html.Action("OfferPage_Mobiles", "Catalog")
                     @Html.Action("OfferPage_Laptops", "Catalog")
                     @Html.Action("OfferPage_Accessories", "Catalog")



                                    @Html.Widget("categorydetails_top")
                                    @*description*@
                                    @*@if (!String.IsNullOrWhiteSpace(Model.Description))
                                        {
                                            <div class="category-description">
                                                @Html.Raw(Model.Description)
                                            </div>
                                        }

                                        @Html.Widget("categorydetails_before_featured_products")*@
                                    @*featured products*@
                                    @*@if (Model.FeaturedProducts.Count > 0)
                                        {
                                            <div class="product-grid featured-product-grid">
                                                <div class="title">
                                                    <strong>@T("Products.FeaturedProducts")</strong>
                                                </div>
                                                <div>
                                                    @foreach (var item in Model.FeaturedProducts)
                                                    {
                                                        <div class="item-box">
                                                            @Html.Partial("_ProductBox", item)
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        }*@
                                    @Html.Widget("categorydetails_after_featured_products")
                                    <div class="viewBy pull-right">
                                        @*sorting*@
                                        @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
                                        {
                                            <form class="form-horizontal pull-left">
                                                <div class="control-group span2">
                                                    <label class="control-label">Sort By: </label>

                                                    @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
                                                </div>
                                            </form>
                                        }
                                        @*view mode*@
                                        @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
                                        {
                                            <label class="control-label viewLabel pull-left">View By: </label>
                                            <div class="pull-left" id="myTab">
                                                <a data-toggle="tab" href="#blockView" class="active"><span class="btn btn-large noBackground"><i class="icon-th-large"></i></span></a>
                                                <a data-toggle="tab" href="#listView"><span class="btn btn-large noBackground"><i class="icon-list"></i></span></a>
                                            </div>
                                        }
                                    </div>
                                
                                @*page size*@
                                @*@if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
                                    {
                                        <div class="product-page-size">
                                            <span>@T("Categories.PageSize")</span>
                                            @Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { onchange = "setLocation(this.value);" })
                                            <span>@T("Categories.PageSize.PerPage")</span>
                                        </div>
                                    }*@

                                @Html.Widget("categorydetails_before_product_list")
                           
                            </div>
                            <div class="pager">
                                @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
                            </div>
                            <h4 class="loading" data-pagenumber="@Model.PagingFilteringContext.PageNumber">Loading... </h4> 
                            @Html.Widget("categorydetails_bottom")
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    pgNum = 1;
    if ($('.loading').attr('data-pagenumber') >= "@Model.PagingFilteringContext.TotalPages") {
        $('.loading').hide();
    }
    function parseAndRenderProducts($html) {
        
	 	        var $blocksList = $html.find('#blockView').find('ul.thumbnails'),
	 	        $blockItems = $blocksList.find('li');
	 	        $('#blockView .thumbnails').append($blockItems);
	 	
	 	        var $itemsList = $html.find('#listView').find('ul.thumbnails'),
	 	        $listItems = $itemsList.find('li');
	 	        $('#listView .thumbnails').append($listItems);
	 	    }
	 	
    function loadNextPage() {
	 	        var pageNumber = $('.loading').attr('data-pagenumber');
	 	        pageNumber = (parseInt(pageNumber) + 1);
	 	    
	 	        if (pgNum == pageNumber) {
	 	                $.ajax({
	 	                    url: '?pagenumber=' + pageNumber,
	 	                    success: function (response) {
	 	                        pgNum = pageNumber;
	 	                        $('.loading').attr('data-pagenumber', pageNumber);
	 	                        parseAndRenderProducts($(response));
	 	                    }
	 	                })
	 	        }
	 	      }

	 	    jQuery(window).scroll(function () {
	 	        if ($(".loading").isOnScreen()) {
	 	            pgNum++;
	 	           
	 	            if ($('.loading').attr('data-pagenumber') >= "@Model.PagingFilteringContext.TotalPages")
	 	            {
	 	                $('.loading').hide();
	 	            }
                    else    loadNextPage();
	 	        }
	 	    });
	 	    $.fn.isOnScreen = function () {
	 	        var b = $(window);
	 	        var a = { top: b.scrollTop() };
	 	        a.bottom = b.scrollTop() + b.height();
	 	        var c = this.offset();
	 	        c.bottom = c.top + this.outerHeight();
	 	        return !(a.bottom < c.top || a.top > c.bottom)
	 	    };

	 	    //$(document).ready(function (e) {
	 	    //    $('.loading').click(function (e) {
	 	    //        loadNextPage();
	 	    //    })
	 	    //});
</script>
	 