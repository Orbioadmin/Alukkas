@model CatalogPagingFilteringModel.PriceRangeFilterModel
@using Nop.Web.Models.Catalog;
@{
    var selectedItem = Model.Items.FirstOrDefault(x => x.Selected);
}
@helper FormatPriceRangeText(CatalogPagingFilteringModel.PriceRangeFilterItem filterItem)
{
    string rangeText = "";
    if (String.IsNullOrWhiteSpace(filterItem.From))
    {
        rangeText = string.Format(T("Filtering.PriceRangeFilter.Under").Text, string.Format("<span class=\"PriceRange\">{0}</span>", filterItem.To));
    }
    else if (String.IsNullOrWhiteSpace(filterItem.To))
    {
        rangeText = string.Format(T("Filtering.PriceRangeFilter.Over").Text, string.Format("<span class=\"PriceRange\">{0}</span>", filterItem.From));
    }
    else
    {
        rangeText = string.Format("<span class=\"PriceRange\">{0}</span> - <span class=\"PriceRange\">{1}</span>", filterItem.From, filterItem.To);
    }
    <text>@Html.Raw(rangeText)</text>
}
@if (Model.Enabled)
{

    <h4>@T("Filtering.PriceRangeFilter")</h4>


    if (selectedItem == null)
    {

        foreach (var item in Model.Items)
        {
            <input type="checkbox" value="@item.FilterUrl" /><label>@FormatPriceRangeText(item)</label>
        }
        <h5><a href="#">View All</a></h5>

    }
    else
    {
        <div class="selected-price-range">
            @FormatPriceRangeText(selectedItem)

        </div>
        <div class="remove-filter">
            <a href="@Model.RemoveFilterUrl" class="remove-price-range-filter">@T("Filtering.PriceRangeFilter.Remove")</a>
        </div>
    }
    <script>
        $('.filterChecks input').on('change', function (e) {
            if ($(this).is(':checked')) {
                window.location.href = $(this).val();
            }
            else {
                //NEED TO REMOVE SPEC FORM URL
            }
        });
    </script>
}